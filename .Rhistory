install.packages("rvest")
install.packages("dplyr")  # for cleaning data
library(rvest)
library(dplyr)
# Define the URL
url <- "https://www.ign.gob.ar/NuestrasActividades/Geografia/DatosArgentina/VolcanesActivos"
# Read the webpage
webpage <- read_html(url)
# Extract the table by class
table <- webpage %>%
html_node(".table.table-striped.table-bordered.table-info-geo") %>%
html_table()
# View the extracted table
print(table)
print(table)
# Function to convert DMS to Decimal Degrees
dms_to_decimal <- function(dms_string) {
# Extract degrees, minutes, and seconds using regular expressions
dms <- unlist(regmatches(dms_string, gregexpr("[0-9]+", dms_string)))
# Degrees, minutes, seconds for both lat and lon
lat_deg <- as.numeric(dms[1])
lat_min <- as.numeric(dms[2])
lat_sec <- as.numeric(dms[3])
lon_deg <- as.numeric(dms[4])
lon_min <- as.numeric(dms[5])
lon_sec <- as.numeric(dms[6])
# Convert to decimal degrees
lat_decimal <- lat_deg + lat_min / 60 + lat_sec / 3600
lon_decimal <- lon_deg + lon_min / 60 + lon_sec / 3600
# Handle S and W (negative for southern hemisphere and western longitude)
if (grepl("S", dms_string)) lat_decimal <- -lat_decimal
if (grepl("O", dms_string)) lon_decimal <- -lon_decimal
return(c(lat_decimal, lon_decimal))
}
# Apply DMS to Decimal Degrees conversion to the Coordenadas column
df <- df %>%
mutate(
lat_lon = lapply(Coordenadas, dms_to_decimal),
lat = sapply(lat_lon, function(x) x[1]),
lon = sapply(lat_lon, function(x) x[2])
)
install.packages("rvest")
install.packages("dplyr")  # for cleaning data
install.packages("sf")     # for spatial transformations
library(rvest)
library(dplyr)
library(sf)
# Define the URL
url <- "https://www.ign.gob.ar/NuestrasActividades/Geografia/DatosArgentina/VolcanesActivos"
# Read the webpage
webpage <- read_html(url)
# Extract the table by class
table <- webpage %>%
html_node(".table.table-striped.table-bordered.table-info-geo") %>%
html_table()
# View the extracted table
print(table)
# Function to convert DMS to Decimal Degrees
dms_to_decimal <- function(dms_string) {
dms <- unlist(regmatches(dms_string, gregexpr("[0-9]+", dms_string)))
# Degrees, minutes, seconds for both lat and lon
lat_deg <- as.numeric(dms[1])
lat_min <- as.numeric(dms[2])
lat_sec <- as.numeric(dms[3])
lon_deg <- as.numeric(dms[4])
lon_min <- as.numeric(dms[5])
lon_sec <- as.numeric(dms[6])
# Convert to decimal degrees
lat_decimal <- lat_deg + lat_min / 60 + lat_sec / 3600
lon_decimal <- lon_deg + lon_min / 60 + lon_sec / 3600
# Handle S and W (negative for southern hemisphere and western longitude)
if (grepl("S", dms_string)) lat_decimal <- -lat_decimal
if (grepl("O", dms_string)) lon_decimal <- -lon_decimal
return(c(lat_decimal, lon_decimal))
}
# Apply DMS to Decimal Degrees conversion to the Coordenadas column
table <- table %>%
rowwise() %>%
mutate(
lat_lon = list(dms_to_decimal(Coordenadas)),
lat = lat_lon[[1]][1],
lon = lat_lon[[1]][2]
) %>%
ungroup() %>%
select(-lat_lon)  # remove the intermediate list column if no longer needed
# Convert the decimal degrees to an sf object
points_sf <- st_as_sf(table, coords = c("lon", "lat"), crs = 4326)
install.packages("sf")
install.packages("dplyr")
install.packages("rvest")
install.packages("dplyr")  # for cleaning data
install.packages("sf")     # for spatial transformations
library(rvest)
library(dplyr)
library(sf)
# Define the URL
url <- "https://www.ign.gob.ar/NuestrasActividades/Geografia/DatosArgentina/VolcanesActivos"
# Read the webpage
webpage <- read_html(url)
# Extract the table by class
table <- webpage %>%
html_node(".table.table-striped.table-bordered.table-info-geo") %>%
html_table()
# View the extracted table
print(table)
# Function to convert DMS to Decimal Degrees
dms_to_decimal <- function(dms_string) {
dms <- unlist(regmatches(dms_string, gregexpr("[0-9]+", dms_string)))
# Degrees, minutes, seconds for both lat and lon
lat_deg <- as.numeric(dms[1])
lat_min <- as.numeric(dms[2])
lat_sec <- as.numeric(dms[3])
lon_deg <- as.numeric(dms[4])
lon_min <- as.numeric(dms[5])
lon_sec <- as.numeric(dms[6])
# Convert to decimal degrees
lat_decimal <- lat_deg + lat_min / 60 + lat_sec / 3600
lon_decimal <- lon_deg + lon_min / 60 + lon_sec / 3600
# Handle S and W (negative for southern hemisphere and western longitude)
if (grepl("S", dms_string)) lat_decimal <- -lat_decimal
if (grepl("O", dms_string)) lon_decimal <- -lon_decimal
return(c(lat_decimal, lon_decimal))
}
# Apply DMS to Decimal Degrees conversion to the Coordenadas column
table <- table %>%
rowwise() %>%
mutate(
lat_lon = list(dms_to_decimal(Coordenadas)),
lat = lat_lon[[1]][1],
lon = lat_lon[[1]][2]
) %>%
ungroup() %>%
select(-lat_lon)  # remove the intermediate list column if no longer needed
# Convert the decimal degrees to an sf object
points_sf <- st_as_sf(table, coords = c("lon", "lat"), crs = 4326)
install.packages("hexSticker")
library(hexSticker)
s <- sticker(~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab=""),
package="hexSticker", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="~/argentum/icon.png")
s
setwd("~/argentum")
library(hexSticker)
imgurl <- system.file("escudo.png", package="argentum")
sticker(imgurl, package="argentum", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="icon.png")
library(hexSticker)
imgurl <- system.file("~/argentum/escudo.png", package="argentum")
sticker(imgurl, package="argentum", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="~/argentum/icon.png")
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
filename="~/argentum/icon.png")
library(hexSticker)
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Gochi Hand", "gochi")
## Automatically use showtext to render text for future devices
showtext_auto()
# Use the direct path to your image
imgurl <- "~/argentum/escudo.png"  # Using home directory path directly
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
filename="~/argentum/icon.png")
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Uncial Antiqua", "Medieval")
## Automatically use showtext to render text for future devices
showtext_auto()
# Use the direct path to your image
imgurl <- "~/argentum/escudo.png"  # Using home directory path directly
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
filename="~/argentum/icon.png")
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Uncial Antiqua")
## Automatically use showtext to render text for future devices
showtext_auto()
# Use the direct path to your image
imgurl <- "~/argentum/escudo.png"  # Using home directory path directly
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
filename="~/argentum/icon.png")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
h_color="#f39c12")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
h_color="#f39c12",
h_fill="#f9690e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
h_color="#ffffff",
h_fill="#73ACDF")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
h_color="#ffffff",
h_fill="#73ACDF"
p_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
h_color="#ffffff",
h_fill="#73ACDF",
p_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=20,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Uncial Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=0.5,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=-0.5,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=15,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=10,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=5,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=2,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=0.5,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
library(hexSticker)
library(showtext)
# Load Google fonts
font_add_google("Uncial Antiqua")
showtext_auto()
# Create the sticker with the custom font
sticker(imgurl,
package="argentum",
p_size=15,
p_y=0.5,
s_x=1,
s_y=.75,
s_width=.6,
p_family="Modern Antiqua",  # Specify the font family
filename="~/argentum/icon.png",
p_color="#ffffff",
h_fill="#73ACDF",
h_color="#f6b50e")
